/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 */

package com.mycompany.enumeratedtypeandwrapperclassassignment;

//Imports:
import java.util.Scanner;

/**
 *
 * @author NWilber2026
 */
public class EnumeratedTypeandWrapperClassAssignment {

    //Enum Classes:   
        //Days of the week
        enum Day {Sunday, Monday,Tuesday, Wednesday, Thursday, Friday, Saturday} 
        //Months of the year
        enum Month {January, February, March, April, May, June, July, August, September, October, November, December}
    
    
    
    public static void main(String[] args) {
        
    //Declarations:
        //Declare Scanner
        Scanner scan = new Scanner(System.in);
                
        
        
    //Problem 1:
        
        /* 1a) Write a main method that creates an enumeration of the days in the week. 
        Once the enum has been created and the day in the week variables filled, print 
        them all out, but rather than the zero based ordinals, print out the days in 
        the week (1-7).*/
    
        System.out.println("\nProblem 1a: ");    
        
        //Declare days of the week
        Day day1, day2, day3, day4, day5, day6, day7;
        day1 = Day.Sunday;
        day2 = Day.Monday;
        day3 = Day.Tuesday;
        day4 = Day.Wednesday;
        day5 = Day.Thursday;
        day6 = Day.Friday;
        day7 = Day.Saturday;
        
        //Print all
        System.out.println("  Days of the week in order from 1-7: ");   
        System.out.println("     Day " + (day1.ordinal()+1) + ": " + day1);        
        System.out.println("     Day " + (day2.ordinal()+1) + ": " + day2);
        System.out.println("     Day " + (day3.ordinal()+1) + ": " + day3);
        System.out.println("     Day " + (day4.ordinal()+1) + ": " + day4);
        System.out.println("     Day " + (day5.ordinal()+1) + ": " + day5);
        System.out.println("     Day " + (day6.ordinal()+1) + ": " + day6);
        System.out.println("     Day " + (day7.ordinal()+1) + ": " + day7);
        
       
        /* 1b) Write a main method that creates an enumeration of the months in the year. 
        Once the enum has been created and the month variables filled, print them out, 
        but not with the enum ordinals, but the "month in the year" numbers (1-12).*/
                       
        System.out.println("\nProblem 1b: ");   
        
        //Declare months of the year
        Month month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12;
        month1 = Month.January;
        month2 = Month.February;
        month3 = Month.March;
        month4 = Month.April;
        month5 = Month.May;
        month6 = Month.June;
        month7 = Month.July;
        month8 = Month.August;
        month9 = Month.September;
        month10 = Month.October;
        month11 = Month.November;
        month12 = Month.December;
       
        //Print all
        System.out.println("  Months of the year in order from 1-12: ");        
        System.out.println("    Month " + (month1.ordinal()+1) + ": " + month1);
        System.out.println("    Month " + (month2.ordinal()+1) + ": " + month2);
        System.out.println("    Month " + (month3.ordinal()+1) + ": " + month3);
        System.out.println("    Month " + (month4.ordinal()+1) + ": " + month4);
        System.out.println("    Month " + (month5.ordinal()+1) + ": " + month5);
        System.out.println("    Month " + (month6.ordinal()+1) + ": " + month6);
        System.out.println("    Month " + (month7.ordinal()+1) + ": " + month7);
        System.out.println("    Month " + (month8.ordinal()+1) + ": " + month8);
        System.out.println("    Month " + (month9.ordinal()+1) + ": " + month9);
        System.out.println("    Month " + (month10.ordinal()+1) + ": " + month10);
        System.out.println("    Month " + (month11.ordinal()+1) + ": " + month11);
        System.out.println("    Month " + (month12.ordinal()+1) + ": " + month12);
      
        
                
    /*Problem 2: Write a main method which asks for your CCHS username (including graduation year). 
    It must create a string of the username, as well as a string of the year part 
    (use substring method of String object). Recall all the years have a length of 4 characters.
    Use an Integer object to parse the int value of that string. Have the method print your 
    graduation year, as well as say what the year after your graduation year will be by 
    adding 1 to the parsed int value. Have it also print "In computer language, you 
    graduate in: " and then the binary string version of your graduation year.*/
        
        System.out.println("\nProblem 2: ");   
    
        //Ask user for thier CCHS username and grad year
        System.out.println("What is your CCHS Username: ");
        String fullInfo = scan.nextLine();
        
        //Separate grad year from full info
        String gradyr = fullInfo.substring((fullInfo.length()) - 4);
        
        //Convert grad year to int (parse)
        int gradyrInt = Integer.parseInt(gradyr);
        
        //Convert grad year to binary
        String binary1 = Integer.toBinaryString(gradyrInt);
        
        //Print all
        System.out.println("Your graduation year is: " + gradyrInt);
        System.out.println("The year after you graduate is: " + (gradyrInt+1));
        System.out.println("In computer language, you graduate in: " + binary1);
    


    }
        
       
    }

